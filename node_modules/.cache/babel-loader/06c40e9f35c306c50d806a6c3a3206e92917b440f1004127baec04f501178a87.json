{"ast":null,"code":"var _jsxFileName = \"/Users/absatnurlybk./whatsapp-chat/src/components/Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Message from \"./Message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  idInstance,\n  apiTokenInstance,\n  phone\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const sendMessage = async () => {\n    const url = `https://7103.api.greenapi.com/waInstance${idInstance}/SendMessage/${apiTokenInstance}`;\n    const data = {\n      chatId: `${phone}@c.us`,\n      message: newMessage\n    };\n    try {\n      await axios.post(url, data);\n      setMessages(prevMessages => [...prevMessages, {\n        text: newMessage,\n        isOutgoing: true\n      }]);\n      setNewMessage(\"\");\n    } catch (error) {\n      console.error(\"Ошибка отправки сообщения:\", error);\n    }\n  };\n  const receiveMessage = async () => {\n    const url = `https://7103.api.greenapi.com/waInstance${idInstance}/ReceiveNotification/${apiTokenInstance}`;\n    try {\n      var _body$senderData, _body$messageData;\n      const response = await axios.get(url);\n      if (!response.data || !response.data.body) return;\n      const {\n        receiptId,\n        body\n      } = response.data;\n\n      // Проверяем, что сообщение от нужного номера\n      if (((_body$senderData = body.senderData) === null || _body$senderData === void 0 ? void 0 : _body$senderData.sender) !== `${phone}@c.us`) {\n        console.log(\"Сообщение от другого номера, пропускаем...\");\n        await axios.delete(`https://7103.api.greenapi.com/waInstance${idInstance}/DeleteNotification/${apiTokenInstance}/${receiptId}`);\n        return;\n      }\n\n      // Проверяем, что сообщение текстовое\n      if (body.typeWebhook === \"incomingMessageReceived\" && ((_body$messageData = body.messageData) === null || _body$messageData === void 0 ? void 0 : _body$messageData.typeMessage) === \"textMessage\") {\n        const newMessage = {\n          text: body.messageData.textMessageData.textMessage,\n          isOutgoing: false\n        };\n        setMessages(prevMessages => [...prevMessages, newMessage]);\n      }\n\n      // Удаляем обработанное уведомление\n      await axios.delete(`https://7103.api.greenapi.com/waInstance${idInstance}/DeleteNotification/${apiTokenInstance}/${receiptId}`);\n    } catch (error) {\n      var _error$response;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 404) {\n        console.log(\"Новых уведомлений нет.\");\n      } else {\n        console.error(\"Ошибка получения сообщения:\", error);\n      }\n    }\n  };\n  useEffect(() => {\n    const interval = setInterval(receiveMessage, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n        text: msg.text,\n        isOutgoing: msg.isOutgoing\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"bFuYpZWMfOU2WhBa/CyaGkj6fmk=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","axios","Message","jsxDEV","_jsxDEV","Chat","idInstance","apiTokenInstance","phone","_s","messages","setMessages","newMessage","setNewMessage","sendMessage","url","data","chatId","message","post","prevMessages","text","isOutgoing","error","console","receiveMessage","_body$senderData","_body$messageData","response","get","body","receiptId","senderData","sender","log","delete","typeWebhook","messageData","typeMessage","textMessageData","textMessage","_error$response","status","interval","setInterval","clearInterval","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/absatnurlybk./whatsapp-chat/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Message from \"./Message\";\n\nconst Chat = ({ idInstance, apiTokenInstance, phone }) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  const sendMessage = async () => {\n    const url = `https://7103.api.greenapi.com/waInstance${idInstance}/SendMessage/${apiTokenInstance}`;\n    const data = {\n      chatId: `${phone}@c.us`,\n      message: newMessage,\n    };\n\n    try {\n      await axios.post(url, data);\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { text: newMessage, isOutgoing: true },\n      ]);\n      setNewMessage(\"\");\n    } catch (error) {\n      console.error(\"Ошибка отправки сообщения:\", error);\n    }\n  };\n\n  const receiveMessage = async () => {\n    const url = `https://7103.api.greenapi.com/waInstance${idInstance}/ReceiveNotification/${apiTokenInstance}`;\n\n    try {\n      const response = await axios.get(url);\n      if (!response.data || !response.data.body) return;\n\n      const { receiptId, body } = response.data;\n\n      // Проверяем, что сообщение от нужного номера\n      if (body.senderData?.sender !== `${phone}@c.us`) {\n        console.log(\"Сообщение от другого номера, пропускаем...\");\n        await axios.delete(\n          `https://7103.api.greenapi.com/waInstance${idInstance}/DeleteNotification/${apiTokenInstance}/${receiptId}`\n        );\n        return;\n      }\n\n      // Проверяем, что сообщение текстовое\n      if (\n        body.typeWebhook === \"incomingMessageReceived\" &&\n        body.messageData?.typeMessage === \"textMessage\"\n      ) {\n        const newMessage = {\n          text: body.messageData.textMessageData.textMessage,\n          isOutgoing: false,\n        };\n\n        setMessages((prevMessages) => [...prevMessages, newMessage]);\n      }\n\n      // Удаляем обработанное уведомление\n      await axios.delete(\n        `https://7103.api.greenapi.com/waInstance${idInstance}/DeleteNotification/${apiTokenInstance}/${receiptId}`\n      );\n    } catch (error) {\n      if (error.response?.status === 404) {\n        console.log(\"Новых уведомлений нет.\");\n      } else {\n        console.error(\"Ошибка получения сообщения:\", error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const interval = setInterval(receiveMessage, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"chat\">\n      <div className=\"messages\">\n        {messages.map((msg, index) => (\n          <Message key={index} text={msg.text} isOutgoing={msg.isOutgoing} />\n        ))}\n      </div>\n      <div className=\"input-area\">\n        <input\n          type=\"text\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          placeholder=\"Введите сообщение\"\n        />\n        <button onClick={sendMessage}>Отправить</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}