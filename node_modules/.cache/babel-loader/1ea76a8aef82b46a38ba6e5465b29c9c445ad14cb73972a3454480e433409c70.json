{"ast":null,"code":"var _jsxFileName = \"/Users/absatnurlybk./whatsapp-chat/src/components/Chat.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst receiveMessages = async (idInstance, apiTokenInstance, setMessages) => {\n  const url = `https://7103.api.greenapi.com/waInstance${idInstance}/ReceiveNotification/${apiTokenInstance}?receiveTimeout=20`;\n  try {\n    const response = await axios.get(url);\n    console.log(\"Received response:\", response.data); // Логируем весь ответ\n    if (response.data) {\n      const {\n        receiptId,\n        body\n      } = response.data;\n      await axios.delete(`https://7103.api.greenapi.com/waInstance${idInstance}/DeleteNotification/${apiTokenInstance}/${receiptId}`);\n\n      // Проверка на входящее сообщение\n      if (body.typeWebhook === \"incomingMessageReceived\" && body.messageData.typeMessage === \"textMessage\") {\n        const newMessage = {\n          text: body.messageData.textMessageData.textMessage,\n          isOutgoing: false\n        };\n        setMessages(prevMessages => [...prevMessages, newMessage]);\n      }\n    }\n  } catch (error) {\n    console.error(\"Ошибка получения сообщения:\", error.response ? error.response.data : error.message);\n  }\n};\nconst Chat = ({\n  idInstance,\n  apiTokenInstance,\n  phone\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const checkMessages = async () => {\n      await receiveMessages(idInstance, apiTokenInstance, setMessages);\n      setTimeout(checkMessages, 5000); // Оптимизируйте таймаут, чтобы не было перегрузки\n    };\n    checkMessages();\n  }, [idInstance, apiTokenInstance]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.isOutgoing ? \"outgoing\" : \"incoming\",\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useEffect","axios","jsxDEV","_jsxDEV","receiveMessages","idInstance","apiTokenInstance","setMessages","url","response","get","console","log","data","receiptId","body","delete","typeWebhook","messageData","typeMessage","newMessage","text","textMessageData","textMessage","isOutgoing","prevMessages","error","message","Chat","phone","_s","messages","useState","checkMessages","setTimeout","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/absatnurlybk./whatsapp-chat/src/components/Chat.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst receiveMessages = async (idInstance, apiTokenInstance, setMessages) => {\n  const url = `https://7103.api.greenapi.com/waInstance${idInstance}/ReceiveNotification/${apiTokenInstance}?receiveTimeout=20`;\n\n  try {\n    const response = await axios.get(url);\n    console.log(\"Received response:\", response.data); // Логируем весь ответ\n    if (response.data) {\n      const { receiptId, body } = response.data;\n\n      await axios.delete(\n        `https://7103.api.greenapi.com/waInstance${idInstance}/DeleteNotification/${apiTokenInstance}/${receiptId}`\n      );\n\n      // Проверка на входящее сообщение\n      if (\n        body.typeWebhook === \"incomingMessageReceived\" &&\n        body.messageData.typeMessage === \"textMessage\"\n      ) {\n        const newMessage = {\n          text: body.messageData.textMessageData.textMessage,\n          isOutgoing: false,\n        };\n        setMessages((prevMessages) => [...prevMessages, newMessage]);\n      }\n    }\n  } catch (error) {\n    console.error(\n      \"Ошибка получения сообщения:\",\n      error.response ? error.response.data : error.message\n    );\n  }\n};\n\nconst Chat = ({ idInstance, apiTokenInstance, phone }) => {\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    const checkMessages = async () => {\n      await receiveMessages(idInstance, apiTokenInstance, setMessages);\n      setTimeout(checkMessages, 5000); // Оптимизируйте таймаут, чтобы не было перегрузки\n    };\n\n    checkMessages();\n  }, [idInstance, apiTokenInstance]);\n\n  return (\n    <div className=\"chat\">\n      <div className=\"messages\">\n        {messages.map((msg, index) => (\n          <div key={index} className={msg.isOutgoing ? \"outgoing\" : \"incoming\"}>\n            {msg.text}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAG,MAAAA,CAAOC,UAAU,EAAEC,gBAAgB,EAAEC,WAAW,KAAK;EAC3E,MAAMC,GAAG,GAAG,2CAA2CH,UAAU,wBAAwBC,gBAAgB,oBAAoB;EAE7H,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACF,GAAG,CAAC;IACrCG,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;IAClD,IAAIJ,QAAQ,CAACI,IAAI,EAAE;MACjB,MAAM;QAAEC,SAAS;QAAEC;MAAK,CAAC,GAAGN,QAAQ,CAACI,IAAI;MAEzC,MAAMZ,KAAK,CAACe,MAAM,CAChB,2CAA2CX,UAAU,uBAAuBC,gBAAgB,IAAIQ,SAAS,EAC3G,CAAC;;MAED;MACA,IACEC,IAAI,CAACE,WAAW,KAAK,yBAAyB,IAC9CF,IAAI,CAACG,WAAW,CAACC,WAAW,KAAK,aAAa,EAC9C;QACA,MAAMC,UAAU,GAAG;UACjBC,IAAI,EAAEN,IAAI,CAACG,WAAW,CAACI,eAAe,CAACC,WAAW;UAClDC,UAAU,EAAE;QACd,CAAC;QACDjB,WAAW,CAAEkB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEL,UAAU,CAAC,CAAC;MAC9D;IACF;EACF,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdf,OAAO,CAACe,KAAK,CACX,6BAA6B,EAC7BA,KAAK,CAACjB,QAAQ,GAAGiB,KAAK,CAACjB,QAAQ,CAACI,IAAI,GAAGa,KAAK,CAACC,OAC/C,CAAC;EACH;AACF,CAAC;AAED,MAAMC,IAAI,GAAGA,CAAC;EAAEvB,UAAU;EAAEC,gBAAgB;EAAEuB;AAAM,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,QAAQ,EAAExB,WAAW,CAAC,GAAGyB,QAAQ,CAAC,EAAE,CAAC;EAE5ChC,SAAS,CAAC,MAAM;IACd,MAAMiC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAM7B,eAAe,CAACC,UAAU,EAAEC,gBAAgB,EAAEC,WAAW,CAAC;MAChE2B,UAAU,CAACD,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC;IAEDA,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAAC5B,UAAU,EAAEC,gBAAgB,CAAC,CAAC;EAElC,oBACEH,OAAA;IAAKgC,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBjC,OAAA;MAAKgC,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBL,QAAQ,CAACM,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBpC,OAAA;QAAiBgC,SAAS,EAAEG,GAAG,CAACd,UAAU,GAAG,UAAU,GAAG,UAAW;QAAAY,QAAA,EAClEE,GAAG,CAACjB;MAAI,GADDkB,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACb,EAAA,CAvBIF,IAAI;AAAAgB,EAAA,GAAJhB,IAAI;AAyBV,eAAeA,IAAI;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}