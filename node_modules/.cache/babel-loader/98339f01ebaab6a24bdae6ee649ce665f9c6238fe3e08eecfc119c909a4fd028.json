{"ast":null,"code":"var _jsxFileName = \"/Users/absatnurlybk./whatsapp-chat/src/components/Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Message from \"./Message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  idInstance,\n  apiTokenInstance,\n  phone\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  // Настройка инстанса\n  useEffect(() => {\n    const setSettings = async () => {\n      const url = `https://7103.api.greenapi.com/waInstance${idInstance}/SetSettings/${apiTokenInstance}`;\n      const data = {\n        webhookUrl: \"\",\n        outgoingWebhook: \"yes\",\n        stateWebhook: \"yes\",\n        incomingWebhook: \"yes\"\n      };\n      try {\n        await axios.post(url, data);\n        console.log(\"Настройки успешно применены.\");\n      } catch (error) {\n        console.error(\"Ошибка настройки инстанса:\", error);\n      }\n    };\n    setSettings();\n  }, [idInstance, apiTokenInstance]);\n\n  // Отправка сообщения\n  const sendMessage = async () => {\n    const url = `https://7103.api.greenapi.com/waInstance${idInstance}/SendMessage/${apiTokenInstance}`;\n    const data = {\n      chatId: `${phone}@c.us`,\n      message: newMessage\n    };\n    try {\n      await axios.post(url, data);\n      setMessages([...messages, {\n        text: newMessage,\n        isOutgoing: true\n      }]);\n      setNewMessage(\"\");\n    } catch (error) {\n      console.error(\"Ошибка отправки сообщения:\", error);\n    }\n  };\n\n  // Получение сообщений\n  const receiveMessage = async () => {\n    const url = `https://7103.api.greenapi.com/waInstance${idInstance}/ReceiveNotification/${apiTokenInstance}?receiveTimeout=20`;\n    try {\n      const response = await axios.get(url);\n      console.log(\"Ответ от ReceiveNotification:\", response.data);\n      if (response.data) {\n        const {\n          receiptId,\n          body\n        } = response.data;\n        await axios.delete(`https://7103.api.greenapi.com/waInstance${idInstance}/DeleteNotification/${apiTokenInstance}/${receiptId}`);\n        if (body.typeWebhook === \"incomingMessageReceived\" && body.messageData.typeMessage === \"textMessage\") {\n          const newMessage = {\n            text: body.messageData.textMessageData.textMessage,\n            isOutgoing: false\n          };\n          setMessages(prevMessages => [...prevMessages, newMessage]);\n        }\n      }\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        console.log(\"Новых уведомлений нет.\");\n      } else {\n        console.error(\"Ошибка получения сообщения:\", error.response ? error.response.data : error.message);\n      }\n    }\n  };\n\n  // Проверка новых сообщений\n  useEffect(() => {\n    const checkMessages = async () => {\n      await receiveMessage();\n      setTimeout(checkMessages, 10000); // Проверяем каждые 10 секунд\n    };\n    checkMessages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n        text: msg.text,\n        isOutgoing: msg.isOutgoing\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"eexxHKRaMxIvaNAmx/uwLhdZif4=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","axios","Message","jsxDEV","_jsxDEV","Chat","idInstance","apiTokenInstance","phone","_s","messages","setMessages","newMessage","setNewMessage","setSettings","url","data","webhookUrl","outgoingWebhook","stateWebhook","incomingWebhook","post","console","log","error","sendMessage","chatId","message","text","isOutgoing","receiveMessage","response","get","receiptId","body","delete","typeWebhook","messageData","typeMessage","textMessageData","textMessage","prevMessages","status","checkMessages","setTimeout","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/absatnurlybk./whatsapp-chat/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Message from \"./Message\";\n\nconst Chat = ({ idInstance, apiTokenInstance, phone }) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  // Настройка инстанса\n  useEffect(() => {\n    const setSettings = async () => {\n      const url = `https://7103.api.greenapi.com/waInstance${idInstance}/SetSettings/${apiTokenInstance}`;\n      const data = {\n        webhookUrl: \"\",\n        outgoingWebhook: \"yes\",\n        stateWebhook: \"yes\",\n        incomingWebhook: \"yes\",\n      };\n\n      try {\n        await axios.post(url, data);\n        console.log(\"Настройки успешно применены.\");\n      } catch (error) {\n        console.error(\"Ошибка настройки инстанса:\", error);\n      }\n    };\n\n    setSettings();\n  }, [idInstance, apiTokenInstance]);\n\n  // Отправка сообщения\n  const sendMessage = async () => {\n    const url = `https://7103.api.greenapi.com/waInstance${idInstance}/SendMessage/${apiTokenInstance}`;\n    const data = {\n      chatId: `${phone}@c.us`,\n      message: newMessage,\n    };\n\n    try {\n      await axios.post(url, data);\n      setMessages([...messages, { text: newMessage, isOutgoing: true }]);\n      setNewMessage(\"\");\n    } catch (error) {\n      console.error(\"Ошибка отправки сообщения:\", error);\n    }\n  };\n\n  // Получение сообщений\n  const receiveMessage = async () => {\n    const url = `https://7103.api.greenapi.com/waInstance${idInstance}/ReceiveNotification/${apiTokenInstance}?receiveTimeout=20`;\n\n    try {\n      const response = await axios.get(url);\n      console.log(\"Ответ от ReceiveNotification:\", response.data);\n      if (response.data) {\n        const { receiptId, body } = response.data;\n\n        await axios.delete(\n          `https://7103.api.greenapi.com/waInstance${idInstance}/DeleteNotification/${apiTokenInstance}/${receiptId}`\n        );\n\n        if (\n          body.typeWebhook === \"incomingMessageReceived\" &&\n          body.messageData.typeMessage === \"textMessage\"\n        ) {\n          const newMessage = {\n            text: body.messageData.textMessageData.textMessage,\n            isOutgoing: false,\n          };\n          setMessages((prevMessages) => [...prevMessages, newMessage]);\n        }\n      }\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        console.log(\"Новых уведомлений нет.\");\n      } else {\n        console.error(\n          \"Ошибка получения сообщения:\",\n          error.response ? error.response.data : error.message\n        );\n      }\n    }\n  };\n\n  // Проверка новых сообщений\n  useEffect(() => {\n    const checkMessages = async () => {\n      await receiveMessage();\n      setTimeout(checkMessages, 10000); // Проверяем каждые 10 секунд\n    };\n\n    checkMessages();\n  }, []);\n\n  return (\n    <div className=\"chat\">\n      <div className=\"messages\">\n        {messages.map((msg, index) => (\n          <Message key={index} text={msg.text} isOutgoing={msg.isOutgoing} />\n        ))}\n      </div>\n      <div className=\"input-area\">\n        <input\n          type=\"text\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          placeholder=\"Введите сообщение\"\n        />\n        <button onClick={sendMessage}>Отправить</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}