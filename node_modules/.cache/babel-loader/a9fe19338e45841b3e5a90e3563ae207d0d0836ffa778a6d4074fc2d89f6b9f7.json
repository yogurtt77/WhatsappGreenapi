{"ast":null,"code":"var _jsxFileName = \"/Users/absatnurlybk./whatsapp-chat/src/components/Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Message from \"./Message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  idInstance,\n  apiTokenInstance,\n  phone\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [instanceStatus, setInstanceStatus] = useState(\"\");\n\n  // Настройка инстанса при монтировании\n  useEffect(() => {\n    const configureInstance = async () => {\n      try {\n        // Настройка параметров вебхука\n        await axios.post(`https://7103.api.greenapi.com/waInstance${idInstance}/SetSettings/${apiTokenInstance}`, {\n          webhookUrl: \"\",\n          outgoingWebhook: \"yes\",\n          stateWebhook: \"yes\",\n          incomingWebhook: \"yes\"\n        });\n\n        // Проверка статуса инстанса\n        const statusResponse = await axios.get(`https://7103.api.greenapi.com/waInstance${idInstance}/GetStateInstance/${apiTokenInstance}`);\n        setInstanceStatus(statusResponse.data.stateInstance);\n      } catch (error) {\n        console.error(\"Ошибка настройки:\", error);\n      }\n    };\n    if (idInstance && apiTokenInstance) {\n      configureInstance();\n    }\n  }, [idInstance, apiTokenInstance]);\n\n  // Отправка сообщения\n  const handleSendMessage = async () => {\n    if (!newMessage.trim()) return;\n    try {\n      const response = await axios.post(`https://7103.api.greenapi.com/waInstance${idInstance}/SendMessage/${apiTokenInstance}`, {\n        chatId: `${phone}@c.us`,\n        message: newMessage\n      });\n\n      // Добавляем отправленное сообщение в историю\n      setMessages(prev => [...prev, {\n        id: response.data.idMessage,\n        text: newMessage,\n        isOutgoing: true,\n        status: \"sent\"\n      }]);\n      setNewMessage(\"\");\n    } catch (error) {\n      console.error(\"Ошибка отправки:\", error);\n    }\n  };\n\n  // Получение сообщений\n  const processedMessages = new Set(); // Храним обработанные ID сообщений\n\n  const fetchMessages = async () => {\n    try {\n      const response = await axios.get(`https://7103.api.greenapi.com/waInstance${idInstance}/ReceiveNotification/${apiTokenInstance}`, {\n        params: {\n          receiveTimeout: 20\n        }\n      });\n      if (response.data) {\n        const {\n          receiptId,\n          body\n        } = response.data;\n        if (body.typeWebhook === \"incomingMessageReceived\") {\n          const messageId = body.idMessage;\n\n          // Проверяем, было ли уже обработано это сообщение\n          if (!processedMessages.has(messageId)) {\n            processedMessages.add(messageId); // Добавляем в список обработанных\n\n            let messageContent = \"\";\n            const messageData = body.messageData;\n            switch (messageData.typeMessage) {\n              case \"textMessage\":\n                messageContent = messageData.textMessageData.textMessage;\n                break;\n              case \"extendedTextMessage\":\n                messageContent = messageData.extendedTextMessageData.text;\n                break;\n              case \"quotedMessage\":\n                messageContent = messageData.extendedTextMessageData.text;\n                break;\n              default:\n                messageContent = \"Неподдерживаемый тип сообщения\";\n            }\n            setMessages(prev => [...prev, {\n              id: messageId,\n              text: messageContent,\n              isOutgoing: false\n            }]);\n\n            // Удаляем уведомление\n            await axios.delete(`https://7103.api.greenapi.com/waInstance${idInstance}/DeleteNotification/${apiTokenInstance}/${receiptId}`);\n          }\n        }\n      }\n    } catch (error) {\n      var _error$response;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) !== 404) {\n        console.error(\"Ошибка получения:\", error);\n      }\n    }\n  };\n\n  // Периодическая проверка сообщений\n  useEffect(() => {\n    const interval = setInterval(fetchMessages, 2000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-bar\",\n      children: [\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 \\u0438\\u043D\\u0441\\u0442\\u0430\\u043D\\u0441\\u0430: \", instanceStatus || \"Проверка...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-area\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n        text: msg.text,\n        isOutgoing: msg.isOutgoing,\n        status: msg.status\n      }, `${msg.id}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",\n        onKeyPress: e => e.key === \"Enter\" && handleSendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        disabled: !newMessage.trim(),\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"ShAPtOuUlvstk2qNI8EY8VLNKpA=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","axios","Message","jsxDEV","_jsxDEV","Chat","idInstance","apiTokenInstance","phone","_s","messages","setMessages","newMessage","setNewMessage","instanceStatus","setInstanceStatus","configureInstance","post","webhookUrl","outgoingWebhook","stateWebhook","incomingWebhook","statusResponse","get","data","stateInstance","error","console","handleSendMessage","trim","response","chatId","message","prev","id","idMessage","text","isOutgoing","status","processedMessages","Set","fetchMessages","params","receiveTimeout","receiptId","body","typeWebhook","messageId","has","add","messageContent","messageData","typeMessage","textMessageData","textMessage","extendedTextMessageData","delete","_error$response","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","e","target","placeholder","onKeyPress","key","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/absatnurlybk./whatsapp-chat/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Message from \"./Message\";\n\nconst Chat = ({ idInstance, apiTokenInstance, phone }) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [instanceStatus, setInstanceStatus] = useState(\"\");\n\n  // Настройка инстанса при монтировании\n  useEffect(() => {\n    const configureInstance = async () => {\n      try {\n        // Настройка параметров вебхука\n        await axios.post(\n          `https://7103.api.greenapi.com/waInstance${idInstance}/SetSettings/${apiTokenInstance}`,\n          {\n            webhookUrl: \"\",\n            outgoingWebhook: \"yes\",\n            stateWebhook: \"yes\",\n            incomingWebhook: \"yes\",\n          }\n        );\n\n        // Проверка статуса инстанса\n        const statusResponse = await axios.get(\n          `https://7103.api.greenapi.com/waInstance${idInstance}/GetStateInstance/${apiTokenInstance}`\n        );\n        setInstanceStatus(statusResponse.data.stateInstance);\n      } catch (error) {\n        console.error(\"Ошибка настройки:\", error);\n      }\n    };\n\n    if (idInstance && apiTokenInstance) {\n      configureInstance();\n    }\n  }, [idInstance, apiTokenInstance]);\n\n  // Отправка сообщения\n  const handleSendMessage = async () => {\n    if (!newMessage.trim()) return;\n\n    try {\n      const response = await axios.post(\n        `https://7103.api.greenapi.com/waInstance${idInstance}/SendMessage/${apiTokenInstance}`,\n        {\n          chatId: `${phone}@c.us`,\n          message: newMessage,\n        }\n      );\n\n      // Добавляем отправленное сообщение в историю\n      setMessages((prev) => [\n        ...prev,\n        {\n          id: response.data.idMessage,\n          text: newMessage,\n          isOutgoing: true,\n          status: \"sent\",\n        },\n      ]);\n\n      setNewMessage(\"\");\n    } catch (error) {\n      console.error(\"Ошибка отправки:\", error);\n    }\n  };\n\n  // Получение сообщений\n  const processedMessages = new Set(); // Храним обработанные ID сообщений\n\n  const fetchMessages = async () => {\n    try {\n      const response = await axios.get(\n        `https://7103.api.greenapi.com/waInstance${idInstance}/ReceiveNotification/${apiTokenInstance}`,\n        { params: { receiveTimeout: 20 } }\n      );\n\n      if (response.data) {\n        const { receiptId, body } = response.data;\n\n        if (body.typeWebhook === \"incomingMessageReceived\") {\n          const messageId = body.idMessage;\n\n          // Проверяем, было ли уже обработано это сообщение\n          if (!processedMessages.has(messageId)) {\n            processedMessages.add(messageId); // Добавляем в список обработанных\n\n            let messageContent = \"\";\n            const messageData = body.messageData;\n\n            switch (messageData.typeMessage) {\n              case \"textMessage\":\n                messageContent = messageData.textMessageData.textMessage;\n                break;\n              case \"extendedTextMessage\":\n                messageContent = messageData.extendedTextMessageData.text;\n                break;\n              case \"quotedMessage\":\n                messageContent = messageData.extendedTextMessageData.text;\n                break;\n              default:\n                messageContent = \"Неподдерживаемый тип сообщения\";\n            }\n\n            setMessages((prev) => [\n              ...prev,\n              { id: messageId, text: messageContent, isOutgoing: false },\n            ]);\n\n            // Удаляем уведомление\n            await axios.delete(\n              `https://7103.api.greenapi.com/waInstance${idInstance}/DeleteNotification/${apiTokenInstance}/${receiptId}`\n            );\n          }\n        }\n      }\n    } catch (error) {\n      if (error.response?.status !== 404) {\n        console.error(\"Ошибка получения:\", error);\n      }\n    }\n  };\n\n  // Периодическая проверка сообщений\n  useEffect(() => {\n    const interval = setInterval(fetchMessages, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"status-bar\">\n        Статус инстанса: {instanceStatus || \"Проверка...\"}\n      </div>\n\n      <div className=\"messages-area\">\n        {messages.map((msg, index) => (\n          <Message\n            key={`${msg.id}-${index}`}\n            text={msg.text}\n            isOutgoing={msg.isOutgoing}\n            status={msg.status}\n          />\n        ))}\n      </div>\n\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          placeholder=\"Введите сообщение...\"\n          onKeyPress={(e) => e.key === \"Enter\" && handleSendMessage()}\n        />\n        <button onClick={handleSendMessage} disabled={!newMessage.trim()}>\n          Отправить\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}